# Generated by Django 3.0.6 on 2020-05-09 09:48

import basedata.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('organ', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('syscfg', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('pinyin', models.CharField(blank=True, max_length=120, null=True, verbose_name='pinyin')),
                ('weight', models.IntegerField(blank=True, default=99, null=True, verbose_name='weight')),
            ],
            options={
                'verbose_name': 'brand',
                'verbose_name_plural': 'brand',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=6, null=True, verbose_name='code')),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('path', models.CharField(blank=True, max_length=200, null=True, verbose_name='path')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.Category', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'category',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('code', models.CharField(blank=True, max_length=20, null=True, verbose_name='employee number')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='phone')),
                ('name', models.CharField(max_length=120, verbose_name='employee name')),
                ('pinyin', models.CharField(blank=True, max_length=120, null=True, verbose_name='pinyin')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('gender', models.CharField(choices=[('0', '未知的性别'), ('1', '男性'), ('2', '女性'), ('9', '未说明的性别')], default='1', max_length=2, verbose_name='gender')),
                ('idcard', models.CharField(max_length=20, verbose_name='id card')),
                ('country', models.CharField(blank=True, choices=[('CN', '中国'), ('EG', '埃及'), ('AT', '奥地利'), ('AU', '澳大利亚'), ('PK', '巴基斯坦'), ('BR', '巴西'), ('KP', '北朝鲜'), ('BE', '比利时'), ('IS', '冰岛'), ('PL', '波兰'), ('DK', '丹麦'), ('DE', '德国'), ('FR', '法国'), ('KR', '韩国'), ('NL', '荷兰'), ('CA', '加拿大'), ('US', '美国'), ('JP', '日本'), ('TW', '中国台湾'), ('HK', '中国香港'), ('ES', '西班牙'), ('GR', '希腊'), ('SG', '新加坡'), ('NZ', '新西兰'), ('IT', '意大利'), ('GB', '英国'), ('MO', '中国澳门'), ('IL', '以色列')], default='CN', max_length=2, null=True, verbose_name='nationality')),
                ('hometown', models.CharField(blank=True, max_length=40, null=True, verbose_name='hometown')),
                ('address', models.CharField(blank=True, max_length=120, null=True, verbose_name='home address')),
                ('banknum', models.CharField(blank=True, max_length=40, null=True, verbose_name='bank account')),
                ('bankname', models.CharField(blank=True, max_length=80, null=True, verbose_name='bank name')),
                ('emergency', models.CharField(blank=True, max_length=40, null=True, verbose_name='emergency contacts')),
                ('email', models.CharField(blank=True, max_length=20, null=True, verbose_name='email')),
                ('office', models.CharField(blank=True, max_length=20, null=True, verbose_name='office phone')),
                ('rank', models.CharField(choices=[('10', '领导班子'), ('11', '副总师（助理）'), ('12', '部门负责人（正职）'), ('13', '部门负责人（副职）'), ('14', '部门内设机构负责人（正职）'), ('15', '部门内设机构负责人（副职）'), ('20', '一级职员'), ('21', '二级职员'), ('22', '三级职员'), ('23', '四级职员'), ('24', '五级职员'), ('25', '六级职员'), ('26', '七级职员'), ('27', '八级职员')], default='00', max_length=2, verbose_name='employee rank')),
                ('workday', models.DateField(blank=True, null=True, verbose_name='workday')),
                ('startday', models.DateField(blank=True, null=True, verbose_name='start date')),
                ('religion', models.CharField(blank=True, choices=[('00', '无宗教信仰'), ('10', '佛教'), ('20', '喇嘛教'), ('30', '道教'), ('40', '天主教'), ('50', '基督教'), ('70', '东正教'), ('80', '伊斯兰教'), ('99', '其他')], default='00', max_length=2, null=True, verbose_name='religion')),
                ('marital', models.CharField(blank=True, choices=[('10', '未婚'), ('20', '初婚'), ('21', '再婚'), ('22', '复婚'), ('30', '丧偶'), ('40', '离婚'), ('90', '其他')], default='10', max_length=2, null=True, verbose_name='marital status')),
                ('party', models.CharField(blank=True, choices=[('01', '中国共产党党员'), ('02', '中国共产党预备党员'), ('03', '中国共产主义青年团团员'), ('04', '中国国民党革命委员会会员'), ('05', '中国民主同盟盟员'), ('06', '中国民主建国会会员'), ('07', '中国民主促进会会员'), ('08', '中国农工民主党党员'), ('09', '中国致公党党员'), ('10', '九三学社社员'), ('11', '台湾民主自治同盟盟员'), ('12', '无党派民主人士'), ('13', '群众')], default='13', max_length=2, null=True, verbose_name='political party')),
                ('nation', models.CharField(blank=True, choices=[('01', '汉族'), ('02', '蒙古族'), ('03', '回族'), ('04', '藏族'), ('05', '维吾尔族'), ('06', '苗族'), ('07', '彝族'), ('08', '壮族'), ('09', '布依族'), ('10', '朝鲜族'), ('11', '满族')], default='01', max_length=2, null=True, verbose_name='nation')),
                ('ygxs', models.CharField(blank=True, choices=[('1', '劳动合同制（长期）'), ('2', '劳动合同制（短期）'), ('3', '人事代理制'), ('4', '劳务派遣制'), ('5', '非全日制'), ('6', '业务外包'), ('9', '其他')], default='2', max_length=2, null=True, verbose_name='employ ygxs')),
                ('status', models.CharField(blank=True, choices=[('10', '在岗工作'), ('11', '见习期（试用）'), ('12', '待岗'), ('20', '离职'), ('21', '退休'), ('22', '终止劳动合同'), ('23', '协商解除劳动合同'), ('24', '劳动者主张解除劳动合同'), ('25', '用人单位主张解除劳动合同'), ('30', '死亡')], default='10', max_length=2, null=True, verbose_name='employ status')),
                ('category', models.CharField(blank=True, choices=[('10', '经营者'), ('20', '中层管理人员'), ('21', '一般管理人员'), ('30', '专业技术人员'), ('40', '技能人员'), ('50', '服务人员'), ('90', '其他人员')], default='21', max_length=2, null=True, verbose_name='employ category')),
                ('literacy', models.CharField(blank=True, choices=[('0', '研究生'), ('10', '大学本科'), ('20', '大学专科和专科学校'), ('40', '技工学校'), ('50', '高中'), ('60', '初中'), ('70', '小学'), ('80', '文盲或半文盲')], default='10', max_length=2, null=True, verbose_name='literacy')),
                ('major', models.CharField(blank=True, choices=[('01', '哲学'), ('02', '经济学'), ('03', '法学'), ('04', '教育学'), ('05', '文学'), ('06', '历史学'), ('07', '理学'), ('08', '工学'), ('09', '农学'), ('10', '医学'), ('11', '军事学'), ('12', '管理学'), ('14', '建筑学'), ('99', '其他')], default='99', max_length=2, null=True, verbose_name='major type')),
                ('degree', models.CharField(blank=True, choices=[('1', '名誉博士 '), ('2', '博士'), ('3', '硕士'), ('4', '学士'), ('5', '双学士'), ('9', '其他')], default='4', max_length=2, null=True, verbose_name='major degree')),
                ('spjob', models.CharField(blank=True, choices=[('00', '非特殊工种'), ('11', '汽机运行值班工'), ('12', '锅炉运行值班工'), ('13', '燃料运行值班工'), ('14', '锅炉本体检修工'), ('15', '保温工'), ('16', '钢球磨煤机及制粉系统检修工'), ('17', '水轮机检修工'), ('6', '其他（由地方社会保障部门认可的特殊工种）'), ('21', '锅炉本体安装工'), ('22', '管道安装工'), ('23', '筑炉瓦工'), ('24', '装模工'), ('31', '水轮机安装工'), ('32', '采石工'), ('33', '爆破'), ('34', '石料粉碎工'), ('35', '潜水员'), ('35', '轮机工'), ('37', '水手'), ('41', '翻砂铸造工'), ('42', '喷砂工'), ('43', '镀锌工'), ('44', '电镀工'), ('45', '印刷线路制板工'), ('46', '浸漆工'), ('47', '电焊条制作工'), ('48', '注塑工'), ('49', '铆工'), ('51', '混凝土工'), ('52', '钢筋工'), ('53', '架子工'), ('54', '推土机司机'), ('55', '挖土机司机'), ('56', '重型载重汽车司机'), ('57', '野外勘测工'), ('58', '沥青工'), ('59', '环氧树脂工')], default='00', max_length=2, null=True, verbose_name='special job')),
                ('health', models.CharField(blank=True, choices=[('1', '健康或良好'), ('2', '一般或较弱'), ('3', '有慢性病（一）'), ('4', '有慢性病（二）'), ('6', '残疾'), ('7', '军残')], default='1', max_length=2, null=True, verbose_name='health')),
                ('tag1', models.CharField(blank=True, choices=[('15', '复员干部'), ('10', '军转干部'), ('20', '转业士官'), ('30', '复员士官'), ('40', '退役士兵'), ('99', '非复转军人')], default='99', max_length=2, null=True, verbose_name='tag1 fzjr')),
                ('tag2', models.CharField(blank=True, choices=[('1', '党委（党组）书记'), ('2', '党委（党组）副书记'), ('3', '党委常委（党组成员）'), ('4', '纪委书记（纪检组组长）'), ('6', '工会主席'), ('8', '其他党委（党组）负责人'), ('9', '非党委负责人')], default='9', max_length=2, null=True, verbose_name='tag2 dwld')),
                ('tag3', models.CharField(blank=True, choices=[('010101', '董事长'), ('010102', '副董事长'), ('010103', '董事'), ('010104', '职工董事'), ('0201', '监事会主席'), ('0202', '监事会副主席'), ('0203', '监事'), ('0204', '国资委派出监事'), ('0205', '职工监事'), ('00', '非董事监事')], default='00', max_length=6, null=True, verbose_name='tag3 dsjs')),
                ('tag4', models.CharField(blank=True, choices=[('0', '未服兵役'), ('1', '退出现役'), ('2', '士兵预备役'), ('3', '军官预备役'), ('4', '服现役'), ('9', '其他')], default='0', max_length=2, null=True, verbose_name='tag4 byzk')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organ.Organization', verbose_name='organization')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organ.Position', verbose_name='position')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'employee',
                'verbose_name_plural': 'employee',
                'permissions': (('view_all_employee', 'view all employee'),),
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('code', models.CharField(blank=True, max_length=20, null=True, verbose_name='material code')),
                ('barcode', models.CharField(blank=True, max_length=40, null=True, verbose_name='bar code')),
                ('name', models.CharField(max_length=120, verbose_name='material name')),
                ('spec', models.CharField(blank=True, max_length=120, null=True, verbose_name='specifications')),
                ('pinyin', models.CharField(blank=True, max_length=120, null=True, verbose_name='pinyin')),
                ('tp', models.CharField(blank=True, choices=[('10', '生产物料'), ('20', '建筑物/培训室'), ('30', '员工宿舍'), ('40', '工卡/饭卡'), ('50', '车辆'), ('60', '图书'), ('70', '工位'), ('80', '工单服务'), ('11', '办公用品')], default='10', max_length=2, null=True, verbose_name='mt type')),
                ('status', models.BooleanField(default=True, verbose_name='in use')),
                ('is_equip', models.BooleanField(default=False, verbose_name='is equipment')),
                ('can_sale', models.BooleanField(default=True, verbose_name='can sale')),
                ('is_virtual', models.BooleanField(default=False, verbose_name='is virtual')),
                ('stock_price', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True, verbose_name='stock price')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True, verbose_name='purchase price')),
                ('sale_price', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True, verbose_name='sale price')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.Brand', verbose_name='brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.Category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'material',
                'verbose_name_plural': 'material',
                'ordering': ['tp', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=6, null=True, verbose_name='code')),
                ('name', models.CharField(max_length=20, verbose_name='name')),
                ('status', models.BooleanField(default=True, verbose_name='in use')),
            ],
            options={
                'verbose_name': 'measure',
                'verbose_name_plural': 'measure',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('code', models.CharField(blank=True, max_length=20, null=True, verbose_name='partner code')),
                ('name', models.CharField(max_length=120, verbose_name='partner name')),
                ('short', models.CharField(blank=True, max_length=20, null=True, verbose_name='short name')),
                ('pinyin', models.CharField(blank=True, max_length=120, null=True, verbose_name='pinyin')),
                ('partner_type', models.CharField(choices=[('C', 'Customer'), ('S', 'Supplier')], default='C', max_length=2, verbose_name='type')),
                ('level', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], default='C', max_length=2, verbose_name='level')),
                ('tax_num', models.CharField(blank=True, max_length=40, null=True, verbose_name='tax num')),
                ('tax_address', models.CharField(blank=True, max_length=40, null=True, verbose_name='tax address')),
                ('tax_account', models.CharField(blank=True, max_length=80, null=True, verbose_name='tax account')),
                ('contacts', models.CharField(blank=True, max_length=40, null=True, verbose_name='contacts')),
                ('phone', models.CharField(blank=True, max_length=40, null=True, verbose_name='phone')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='memo')),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organ.Organization', verbose_name='organization')),
            ],
            options={
                'verbose_name': 'partner',
                'verbose_name_plural': 'partner',
                'permissions': (('view_all_customer', 'view all customer'), ('view_all_supplier', 'view all supplier')),
            },
        ),
        migrations.CreateModel(
            name='TechnicalParameterName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('status', models.BooleanField(default=True, verbose_name='in use')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basedata.Category', verbose_name='material category')),
            ],
            options={
                'verbose_name': 'technical parameter',
                'verbose_name_plural': 'technical parameter',
            },
        ),
        migrations.CreateModel(
            name='ValueList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('code', models.CharField(blank=True, max_length=6, null=True, verbose_name='list code')),
                ('name', models.CharField(max_length=40, verbose_name='list name')),
                ('status', models.BooleanField(default=True, verbose_name='in use')),
                ('init', models.BooleanField(default=False, verbose_name='is init')),
                ('locked', models.BooleanField(default=False, verbose_name='is locked')),
                ('lock_time', models.DateTimeField(blank=True, null=True, verbose_name='locked time')),
                ('locked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='locked by')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='syscfg.Module', verbose_name='module')),
            ],
            options={
                'verbose_name': 'value list',
                'verbose_name_plural': 'value list',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('organization', models.CharField(max_length=120, verbose_name='organization')),
                ('position', models.CharField(max_length=120, verbose_name='position')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basedata.Employee', verbose_name='employee')),
            ],
            options={
                'verbose_name': 'work experience',
                'verbose_name_plural': 'work experience',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=6, null=True, verbose_name='code')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('status', models.BooleanField(default=True, verbose_name='in use')),
                ('location', models.CharField(blank=True, max_length=120, null=True, verbose_name='location')),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organ.Organization', verbose_name='organization')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='related users')),
            ],
            options={
                'verbose_name': 'warehouse',
                'verbose_name_plural': 'warehouse',
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, verbose_name='code')),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('memo', models.CharField(blank=True, max_length=120, null=True, verbose_name='memo')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.Trade', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'trade',
                'verbose_name_plural': 'trade',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='TechnicalParameterValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=80, verbose_name='value')),
                ('description', models.CharField(blank=True, max_length=80, null=True, verbose_name='description')),
                ('tech_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basedata.TechnicalParameterName', verbose_name='technical name')),
            ],
            options={
                'verbose_name': 'technical value',
                'verbose_name_plural': 'technical value',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('code', models.CharField(blank=True, max_length=20, null=True, verbose_name='project code')),
                ('name', models.CharField(max_length=120, verbose_name='project name')),
                ('short', models.CharField(blank=True, max_length=20, null=True, verbose_name='short name')),
                ('pinyin', models.CharField(blank=True, max_length=120, null=True, verbose_name='pinyin')),
                ('status', models.CharField(blank=True, choices=[('00', '跟踪/新建'), ('01', '投标/报价'), ('02', '签订合同'), ('03', '生产/交付'), ('04', '验收/回款'), ('99', '关闭')], default='00', max_length=2, null=True, verbose_name='status')),
                ('prj_type', models.CharField(blank=True, choices=[('00', '产品/服务交付类'), ('10', '技术/设备改造类'), ('20', '内部运营类'), ('40', '其他临时项目')], default='00', max_length=2, null=True, verbose_name='project type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='budget')),
                ('income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='income')),
                ('expand', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='expand')),
                ('blueprint', models.FileField(blank=True, null=True, upload_to='project', verbose_name='blueprint')),
                ('offer', models.FileField(blank=True, null=True, upload_to='offer sheet', verbose_name='offer sheet')),
                ('business', models.FileField(blank=True, null=True, upload_to='project', verbose_name='business document')),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organ.Organization', verbose_name='organization')),
                ('partner', models.ForeignKey(blank=True, limit_choices_to={'partner_type': 'C'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.Partner', verbose_name='partner')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='related users')),
            ],
            options={
                'verbose_name': 'project',
                'verbose_name_plural': 'project',
            },
        ),
        migrations.CreateModel(
            name='MaterialParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateField(auto_now_add=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basedata.Material')),
                ('param_name', models.ForeignKey(blank=basedata.models.Trade, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.TechnicalParameterName')),
                ('param_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basedata.TechnicalParameterValue')),
            ],
            options={
                'verbose_name': 'material parameter',
                'verbose_name_plural': 'material parameter',
            },
        ),
        migrations.AddField(
            model_name='material',
            name='measure',
            field=models.ManyToManyField(to='basedata.Measure', verbose_name='measure'),
        ),
        migrations.AddField(
            model_name='material',
            name='org',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organ.Organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='material',
            name='params',
            field=models.ManyToManyField(through='basedata.MaterialParam', to='basedata.TechnicalParameterValue', verbose_name='technical parameter'),
        ),
        migrations.AddField(
            model_name='material',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.Warehouse', verbose_name='warehouse'),
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('relation', models.CharField(blank=True, choices=[('11', '丈夫'), ('12', '妻子'), ('21', '独生子'), ('22', '长子'), ('23', '次子'), ('24', '三子'), ('25', '四子'), ('26', '五子'), ('27', '养子或继子'), ('28', '女婿'), ('31', '独生女'), ('32', '长女'), ('33', '次女'), ('34', '三女'), ('35', '四女'), ('36', '五女'), ('37', '养女或继女'), ('51', '父亲'), ('52', '母亲'), ('53', '公公'), ('54', '婆婆'), ('55', '岳父'), ('56', '岳母'), ('57', '继父或养父'), ('58', '继母或养母'), ('71', '兄'), ('72', '嫂'), ('73', '弟'), ('74', '弟媳'), ('75', '姐姐'), ('76', '姐夫'), ('77', '妹妹'), ('78', '妹夫')], max_length=2, null=True, verbose_name='family title')),
                ('status', models.CharField(blank=True, choices=[('11', '国家公务员'), ('13', '专业技术人员'), ('17', '职员'), ('21', '企业管理人员'), ('24', '工人'), ('27', '农民'), ('31', '学生'), ('37', '现役军人'), ('51', '自由职业者'), ('54', '个人经营者'), ('70', '无业人员'), ('80', '退（离）休人员'), ('90', '其他')], default='17', max_length=2, null=True, verbose_name='social status')),
                ('name', models.CharField(max_length=60, verbose_name='name')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('organization', models.CharField(blank=True, max_length=120, null=True, verbose_name='organization')),
                ('phone', models.CharField(blank=True, max_length=120, null=True, verbose_name='phone')),
                ('emergency', models.BooleanField(default=False, verbose_name='emergency')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basedata.Employee', verbose_name='employee')),
            ],
            options={
                'verbose_name': 'family member',
                'verbose_name_plural': 'family member',
            },
        ),
        migrations.CreateModel(
            name='ExtraParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('data_type', models.CharField(choices=[('CHAR', 'CHAR'), ('NUM', 'NUMBER'), ('DATE', 'DATE')], default='CHAR', max_length=6, verbose_name='data type')),
                ('data_source', models.CharField(blank=True, max_length=40, null=True, verbose_name='data source')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basedata.Material', verbose_name='material')),
            ],
            options={
                'verbose_name': 'extra param',
                'verbose_name_plural': 'extra params',
            },
        ),
        migrations.CreateModel(
            name='ExpenseAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('code', models.CharField(blank=True, max_length=20, null=True, verbose_name='code')),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('category', models.CharField(choices=[('HR', 'HR-DOMAIN'), ('OF', 'OFFICE-DOMAIN'), ('PU', 'PUBLIS-DOMAIN'), ('MU', 'MUNADOMAIN'), ('BU', 'BUSINESS'), ('OT', 'OTHER')], default='PU', max_length=4, verbose_name='category')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('status', models.BooleanField(default=True, verbose_name='in use')),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organ.Organization', verbose_name='organization')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.ExpenseAccount', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'expenses account',
                'verbose_name_plural': 'expenses account',
                'ordering': ['category', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('edu_type', models.CharField(choices=[('10', '研究生教育'), ('20', '大学本科教育'), ('30', '大学专科教育'), ('40', '中等职业教育'), ('60', '普通高级中学教育'), ('70', '初级中学教育'), ('80', '小学教育'), ('90', '其他'), ('99', '非学历教育')], default='1', max_length=2, verbose_name='edu type')),
                ('school', models.CharField(max_length=120, verbose_name='school')),
                ('major', models.CharField(blank=True, max_length=120, null=True, verbose_name='major')),
                ('degree', models.CharField(blank=True, choices=[('1', '名誉博士 '), ('2', '博士'), ('3', '硕士'), ('4', '学士'), ('5', '双学士'), ('9', '其他')], default='4', max_length=2, null=True, verbose_name='major degree')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basedata.Employee', verbose_name='employee')),
            ],
            options={
                'verbose_name': 'education experience',
                'verbose_name_plural': 'education experience',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('code', models.CharField(blank=True, max_length=20, null=True, verbose_name='code')),
                ('title', models.CharField(max_length=120, verbose_name='title')),
                ('keywords', models.CharField(blank=True, max_length=120, null=True, verbose_name='keywords')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('tp', models.CharField(choices=[('00', 'SYSTEM MANUAL'), ('10', 'BUSINESS DOC')], default='10', max_length=2, verbose_name='type')),
                ('business_domain', models.CharField(choices=[('HR', '人事'), ('FI', '财务'), ('AD', '行政'), ('MA', '市场'), ('BU', '商务'), ('CS', '客服'), ('OT', '其他'), ('PO', '采购')], default='OT', max_length=4, verbose_name='business domain')),
                ('status', models.CharField(choices=[('0', 'draft'), ('1', 'published')], default='0', max_length=2, verbose_name='status')),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='publish date')),
                ('size', models.CharField(blank=True, max_length=20, null=True, verbose_name='size')),
                ('attach', models.FileField(blank=True, null=True, upload_to='doc', verbose_name='attach')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'document',
                'verbose_name_plural': 'documents',
            },
        ),
        migrations.CreateModel(
            name='DataImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('imp_date', models.DateField(blank=True, default=datetime.datetime.today, null=True, verbose_name='date')),
                ('title', models.CharField(max_length=40, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('attach', models.FileField(blank=True, null=True, upload_to='data', verbose_name='attach')),
                ('is_clear', models.BooleanField(default=0, verbose_name='clear old data?')),
                ('handler', models.CharField(blank=True, max_length=80, null=True, verbose_name='handler class')),
                ('status', models.CharField(choices=[('0', 'NEW'), ('1', 'EXECUTED')], default='0', max_length=2, verbose_name='status')),
                ('content_type', models.ForeignKey(limit_choices_to={'app_label__in': ['basedata', 'organ', 'auth']}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='content type')),
            ],
            options={
                'verbose_name': 'data import',
                'verbose_name_plural': 'data import',
            },
        ),
        migrations.AddField(
            model_name='category',
            name='trade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.Trade', verbose_name='trade'),
        ),
        migrations.AddField(
            model_name='brand',
            name='trade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.Trade', verbose_name='trade'),
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('account', models.CharField(max_length=40, verbose_name='account num')),
                ('title', models.CharField(max_length=40, verbose_name='bank name')),
                ('memo', models.CharField(blank=True, max_length=20, null=True, verbose_name='memo')),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organ.Organization', verbose_name='organization')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basedata.Partner', verbose_name='partner')),
            ],
            options={
                'verbose_name': 'bank account',
                'verbose_name_plural': 'bank account',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(blank=True, null=True, verbose_name='begin date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('address_type', models.CharField(choices=[('01', '送货地址'), ('02', '发票地址'), ('03', '临时地址')], default='01', max_length=2, verbose_name='address type')),
                ('address', models.CharField(max_length=120, verbose_name='address')),
                ('zipcode', models.CharField(blank=True, max_length=8, null=True, verbose_name='zipcode')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='phone')),
                ('contacts', models.CharField(blank=True, max_length=40, null=True, verbose_name='contacts')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'address',
            },
        ),
        migrations.CreateModel(
            name='ValueListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_code', models.CharField(blank=True, max_length=6, null=True)),
                ('code', models.CharField(blank=True, max_length=6, null=True, verbose_name='item code')),
                ('name', models.CharField(max_length=40, verbose_name='item name')),
                ('status', models.BooleanField(default=True, verbose_name='in use')),
                ('weight', models.IntegerField(default=9, null=True, verbose_name='weight')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basedata.ValueList', verbose_name='list group')),
            ],
            options={
                'verbose_name': 'list item',
                'verbose_name_plural': 'list item',
                'ordering': ['weight', 'code'],
                'index_together': {('group', 'group_code')},
            },
        ),
    ]
